@model MVC_StokTakip.MyModel.MyUrunler
@{
    ViewBag.Title = "GuncelleBilgiGetir";
}

<div class="row">
    <div class="col-md-12 pull-left">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm("Guncelle", "Urunler", FormMethod.Post))
                {
                    @Html.ValidationSummary() @*Tüm validationların alt alta gözükmesini sağlıyo*@
                    @Html.AntiForgeryToken()

                    <h4 class="form-header text-uppercase">
                        <i class="fas fa-plus-square"></i> ÜRÜN GÜNCELLEME
                    </h4>


                    @Html.HiddenFor(m => m.ID)
                    <div class="form-group row">
                        @Html.LabelFor(m => m.Kategoriler.Kategori, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.DropDownListFor(m => m.KategoriID, Model.KategoriListesi, "Lütfen Seçiniz", new { @class = "form-control dropdown" })
                            @Html.ValidationMessageFor(m => m.KategoriID, null, new { @class = "text-danger" })

                        </div>
                        @Html.LabelFor(m => m.Markalar.Marka, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.DropDownListFor(m => m.MarkaID, Model.MarkaListesi, new { @class = "form-control dropdown" })
                            @Html.ValidationMessageFor(m => m.MarkaID, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.UrunAdi, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.UrunAdi, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UrunAdi)

                        </div>
                        @Html.LabelFor(m => m.BarkodNo, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.BarkodNo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.BarkodNo)
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.AlisFiyati, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.AlisFiyati, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.AlisFiyati)
                        </div>
                        @Html.LabelFor(m => m.SatisFiyati, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.SatisFiyati, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.SatisFiyati, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.Miktar, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.Miktar, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Miktar)
                        </div>
                        @Html.LabelFor(m => m.Birimler.Birim, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.DropDownListFor(m => m.BirimID, Model.BirimListesi, "Lütfen Seçiniz", new { @class = "form-control dropdown" })
                            @Html.ValidationMessageFor(m => m.BirimID, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.KDV, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.KDV, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.KDV)
                        </div>
                        @Html.LabelFor(m => m.Tarih, new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.Tarih, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(m => m.Tarih)

                    </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.Aciklama, new { @class = "col-sm-2" })
                        <div class="col-sm-10">
                            @Html.TextAreaFor(m => m.Aciklama, new { @class = "form-control", @rows = "5" })
                            @Html.ValidationMessageFor(m => m.Aciklama)
                        </div>
                    </div>

                    <div class="form-footer">
                        <button class="btn btn-success"><i class="far fa-save"></i> KAYDET</button>
                    </div>
                }


            </div>
        </div>
    </div>
</div>


@section CascedingUrun{
    <!--data: { 'IDD':ID },//Bu Controler tarafındaki GetMarka actioonundaki parametre ile aynı olmalı-->
    <script type="text/javascript">

        $(document).ready(function () {
            $("#KategoriID").change(function () {

                var ID = $("#KategoriID").val();
                var markaList = $("#MarkaID");
                markaList.empty();
                $.ajax({
                    url: '/Urunler/GetMarka',
                    type: 'POST',
                    dataType: 'json',
                    data: { id: ID },
                    success: function (data) {

                        for (var i = 0; i < data.length; i++) {
                            markaList.append("<option value='" + data[i].Value + "'>" + data[i].Text + "</Option>");
                        }
                        //$.each(data, function (index, option) {
                        //    markaList.append('<option value=' + option.Value + '>' + option.Text + '<option')
                        //});
                    }
                });

            });

        });

    </script>

}

@section Validate
    {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/Ondalik.js"></script>
}


